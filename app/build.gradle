apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.getkeepsafe.dexcount'

def keystorePropertiesFile = rootProject.file("keystore.properties");
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    dexOptions {
        maxProcessCount 4
        javaMaxHeapSize "3g"
    }

    defaultConfig {
        applicationId "de.mchllngr.androidboilerplate"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.ext.supportLibraryVersion"

    compile "com.hannesdorfmann.mosby:mvp:$rootProject.ext.mosbyVersion"

    compile "com.jakewharton:butterknife:$rootProject.ext.butterknifeVersion"
    apt "com.jakewharton:butterknife-compiler:$rootProject.ext.butterknifeVersion"

    compile "com.google.dagger:dagger:$rootProject.ext.dagger2Version"
    apt "com.google.dagger:dagger-compiler:$rootProject.ext.dagger2Version"

    compile "com.jakewharton.timber:timber:$rootProject.ext.timberVersion"

    debugCompile "com.facebook.stetho:stetho:$rootProject.ext.stethoVersion"

    debugCompile "de.hannesstruss.windfish:windfish-library:$rootProject.ext.windfishVersion"

    debugCompile "io.palaima.debugdrawer:debugdrawer:$rootProject.ext.debugdrawerVersion"
    debugCompile "io.palaima.debugdrawer:debugdrawer-commons:$rootProject.ext.debugdrawerVersion"
    debugCompile "io.palaima.debugdrawer:debugdrawer-actions:$rootProject.ext.debugdrawerVersion"
    debugCompile "io.palaima.debugdrawer:debugdrawer-scalpel:$rootProject.ext.debugdrawerVersion"
    debugCompile "io.palaima.debugdrawer:debugdrawer-fps:$rootProject.ext.debugdrawerVersion"
    // Used by DebugDrawer
    debugCompile "com.jakewharton.scalpel:scalpel:$rootProject.ext.scalpelVersion"
    debugCompile "jp.wasabeef:takt:$rootProject.ext.taktVersion"

    testCompile "junit:junit:$rootProject.ext.jUnitVersion"
    testCompile "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    androidTestCompile("com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}
